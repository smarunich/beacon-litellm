version: '3'

vars:
  AWS_ACCESS_KEY_ID:
    sh: awk '/\[bedrock-ro-api\]/{f=1;next} /\[/{f=0} f&&/aws_access_key_id/{print $3}' ~/.aws/credentials
  AWS_SECRET_ACCESS_KEY:
    sh: awk '/\[bedrock-ro-api\]/{f=1;next} /\[/{f=0} f&&/aws_secret_access_key/{print $3}' ~/.aws/credentials
  NAMESPACE: litellm
  DB_USER:
    sh: echo ${DB_USER:-litellm}
  DB_PASSWORD:
    sh: echo ${DB_PASSWORD:-litellm123}
  DB_NAME:
    sh: echo ${DB_NAME:-litellm}
  POSTGRES_HOST:
    sh: echo "postgres.{{.NAMESPACE}}.svc.cluster.local"
  POSTGRES_PORT:
    sh: echo "5432"

tasks:
  init:
    desc: Initialize AWS credentials, config, and PostgreSQL secrets in Kubernetes
    cmds:
      # Create namespace if it doesn't exist
      - kubectl create namespace {{.NAMESPACE}} --dry-run=client -o yaml | kubectl apply -f -
      
      # Create AWS credentials secret
      - |
        kubectl create secret generic aws-bedrock-credentials \
          --from-literal=AWS_ACCESS_KEY_ID={{.AWS_ACCESS_KEY_ID}} \
          --from-literal=AWS_SECRET_ACCESS_KEY={{.AWS_SECRET_ACCESS_KEY}} \
          --namespace {{.NAMESPACE}} \
          --dry-run=client -o yaml | kubectl apply -f -
      
      # Create PostgreSQL secrets
      - |
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: Secret
        metadata:
          name: postgres-secrets
          namespace: {{.NAMESPACE}}
        type: Opaque
        stringData:
          POSTGRES_USER: {{.DB_USER}}
          POSTGRES_PASSWORD: {{.DB_PASSWORD}}
          POSTGRES_DB: {{.DB_NAME}}
        EOF
      
      # Create temporary config with database URL
      - |
        sed -e "s|database_url:.*|database_url: \"postgresql://{{.DB_USER}}:{{.DB_PASSWORD}}@{{.POSTGRES_HOST}}:{{.POSTGRES_PORT}}/{{.DB_NAME}}\"|" \
            config.yaml > config_temp.yaml
      
      # Create ConfigMap from updated config
      - |
        kubectl create configmap litellm-config \
          --from-file=config.yaml=config_temp.yaml \
          --namespace {{.NAMESPACE}} \
          --dry-run=client -o yaml | kubectl apply -f -
      
      # Clean up temporary config
      - rm config_temp.yaml

      # Output PostgreSQL connection details that will be used
      - |
        echo "PostgreSQL credentials initialized:"
        echo "User: {{.DB_USER}}"
        echo "Database: {{.DB_NAME}}"
        echo "Connection URL: postgresql://{{.DB_USER}}:{{.DB_PASSWORD}}@{{.POSTGRES_HOST}}:{{.POSTGRES_PORT}}/{{.DB_NAME}}"

  copy-and-push:
    desc: Copy LiteLLM image from ghcr.io to GCR using skopeo
    cmds:
      - skopeo copy --all --preserve-digests docker://ghcr.io/berriai/litellm-database:main-latest docker://us-east1-docker.pkg.dev/dogfood-cx/registryrepository/litellm-database:main-latest

  postgres-deploy:
    desc: Deploy PostgreSQL database to Kubernetes
    cmds:
      - |
        sed 's/litellm/{{.DB_USER}}/g; s/litellm123/{{.DB_PASSWORD}}/g' k8s/database-statefulset.yaml | kubectl apply -f - -n {{.NAMESPACE}}
      - |
        echo "Waiting for PostgreSQL StatefulSet to be ready..."
        kubectl rollout status statefulset/postgres -n {{.NAMESPACE}} --timeout=60s
      - |
        echo "PostgreSQL is ready!"

  deploy:
    desc: Deploy LiteLLM proxy to Kubernetes
    deps: [init, postgres-deploy]
    cmds:
      - kubectl apply -f k8s/deployment.yaml -n {{.NAMESPACE}}
      - kubectl apply -f k8s/service.yaml -n {{.NAMESPACE}}

  status:
    desc: Show status of all components
    cmds:
      - echo "\n=== Pods Status ==="
      - kubectl get pods -n {{.NAMESPACE}}
      - echo "\n=== StatefulSets Status ==="
      - kubectl get statefulset -n {{.NAMESPACE}}
      - echo "\n=== Persistent Volume Claims ==="
      - kubectl get pvc -n {{.NAMESPACE}}
      - echo "\n=== Service Status ==="
      - kubectl get service litellm -n {{.NAMESPACE}}
      - echo "\n=== ConfigMaps and Secrets ==="
      - kubectl get configmap litellm-config -n {{.NAMESPACE}}
      - kubectl get secret aws-bedrock-credentials -n {{.NAMESPACE}}
      - kubectl get secret postgres-secrets -n {{.NAMESPACE}}

  logs:
    desc: View logs from the LiteLLM proxy
    cmds:
      - kubectl logs -l app=litellm -n {{.NAMESPACE}} -f

  port-forward:
    desc: Forward local port to LiteLLM proxy
    cmds:
      - kubectl port-forward svc/litellm 4000:4000 -n {{.NAMESPACE}}

  cleanup:
    desc: Clean up all resources
    cmds:
      # Clean up all components
      - kubectl delete -f k8s/deployment.yaml -n {{.NAMESPACE}} --ignore-not-found=true
      - kubectl delete -f k8s/service.yaml -n {{.NAMESPACE}} --ignore-not-found=true
      - kubectl delete -f k8s/database-statefulset.yaml -n {{.NAMESPACE}} --ignore-not-found=true
      - |
        kubectl delete secret \
          aws-bedrock-credentials \
          postgres-secrets \
          -n {{.NAMESPACE}} --ignore-not-found=true
      - kubectl delete configmap litellm-config -n {{.NAMESPACE}} --ignore-not-found=true